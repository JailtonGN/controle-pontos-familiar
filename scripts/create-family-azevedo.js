const mongoose = require('mongoose');
require('dotenv').config();

// Importar modelos
const Family = require('../models/Family');
const User = require('../models/User');
const Kid = require('../models/Kid');
const Activity = require('../models/Activity');

// Conectar ao MongoDB
async function connectDB() {
    try {
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ Conectado ao MongoDB');
    } catch (error) {
        console.error('‚ùå Erro ao conectar ao MongoDB:', error);
        process.exit(1);
    }
}

// Fun√ß√£o principal
async function createFamilyAzevedo() {
    try {
        console.log('üè† Iniciando cria√ß√£o da Fam√≠lia Azevedo...');
        
        // 1. Primeiro, encontrar um usu√°rio admin para ser o criador da fam√≠lia
        const adminUser = await User.findOne({ role: 'admin' });
        if (!adminUser) {
            console.error('‚ùå Nenhum usu√°rio admin encontrado para criar a fam√≠lia');
            return;
        }
        console.log('üëë Usu√°rio admin encontrado para criar fam√≠lia:', adminUser.name);
        
        // 2. Criar a fam√≠lia Azevedo
        const familyData = {
            name: 'Fam√≠lia Azevedo',
            description: 'Fam√≠lia compartilhada para todos os usu√°rios Azevedo',
            isActive: true,
            createdBy: adminUser._id
        };
        
        const family = new Family(familyData);
        await family.save();
        console.log('‚úÖ Fam√≠lia Azevedo criada com sucesso:', family._id);
        
        // 3. Encontrar todos os usu√°rios (exceto admin) para associar √† fam√≠lia
        const users = await User.find({ role: { $ne: 'admin' } });
        console.log(`üë• Encontrados ${users.length} usu√°rios para associar √† fam√≠lia`);
        
        // 4. Associar usu√°rios √† fam√≠lia
        for (const user of users) {
            user.familyId = family._id;
            await user.save();
            console.log(`‚úÖ Usu√°rio ${user.name} (${user.email}) associado √† fam√≠lia Azevedo`);
        }
        
        // 5. Encontrar todas as crian√ßas criadas pelo usu√°rio deejaymax2010@gmail.com
        const targetUser = await User.findOne({ email: 'deejaymax2010@gmail.com' });
        if (!targetUser) {
            console.log('‚ö†Ô∏è Usu√°rio deejaymax2010@gmail.com n√£o encontrado');
        } else {
            console.log('üë§ Usu√°rio alvo encontrado:', targetUser.name);
            
            // Encontrar todas as crian√ßas criadas por este usu√°rio
            const kids = await Kid.find({ parentId: targetUser._id });
            console.log(`üë∂ Encontradas ${kids.length} crian√ßas criadas pelo usu√°rio`);
            
            // Associar todas as crian√ßas √† fam√≠lia Azevedo
            for (const kid of kids) {
                kid.familyId = family._id;
                await kid.save();
                console.log(`‚úÖ Crian√ßa ${kid.name} associada √† fam√≠lia Azevedo`);
            }
            
            // 6. Encontrar todas as atividades criadas por este usu√°rio
            const activities = await Activity.find({ parentId: targetUser._id });
            console.log(`üéØ Encontradas ${activities.length} atividades criadas pelo usu√°rio`);
            
            // Associar todas as atividades √† fam√≠lia Azevedo
            for (const activity of activities) {
                activity.familyId = family._id;
                await activity.save();
                console.log(`‚úÖ Atividade ${activity.name} associada √† fam√≠lia Azevedo`);
            }
        }
        
        console.log('\nüéâ Fam√≠lia Azevedo criada com sucesso!');
        console.log(`üìä Resumo:`);
        console.log(`   - Fam√≠lia ID: ${family._id}`);
        console.log(`   - Fam√≠lia Nome: ${family.name}`);
        console.log(`   - Criador: ${adminUser.name}`);
        console.log(`   - Usu√°rios associados: ${users.length}`);
        
        const kidsCount = await Kid.countDocuments({ familyId: family._id });
        const activitiesCount = await Activity.countDocuments({ familyId: family._id });
        
        console.log(`   - Crian√ßas associadas: ${kidsCount}`);
        console.log(`   - Atividades associadas: ${activitiesCount}`);
        
        if (users.length > 0) {
            console.log('\nüë• Usu√°rios associados √† fam√≠lia:');
            users.forEach(user => {
                console.log(`   - ${user.name} (${user.email})`);
            });
        }
        
        if (targetUser) {
            console.log('\nüë∂ Crian√ßas do usu√°rio deejatmax2010@gmail.com:');
            const kids = await Kid.find({ familyId: family._id });
            kids.forEach(kid => {
                console.log(`   - ${kid.name} (${kid.age} anos)`);
            });
        }
        
    } catch (error) {
        console.error('‚ùå Erro ao criar fam√≠lia Azevedo:', error);
    } finally {
        await mongoose.disconnect();
        console.log('üîå Desconectado do MongoDB');
    }
}

// Executar o script
if (require.main === module) {
    connectDB().then(createFamilyAzevedo);
}

module.exports = { createFamilyAzevedo }; 